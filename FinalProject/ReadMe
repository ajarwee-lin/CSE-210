# Library Management System

## Overview

This C# program implements a simple Library Management System using object-oriented programming principles. The system consists of three main classes: `Book`, `LibraryMember`, and `Transaction`. These classes interact to manage the borrowing and returning of books.

## Class Descriptions

### Book Class

- **Attributes:**
  - Title: Title of the book.
  - Author: Author of the book.
  - IsAvailable: Availability status of the book.

- **Methods:**
  - CheckOut(): Marks the book as checked out.
  - CheckIn(): Marks the book as checked in.

### LibraryMember Class

- **Attributes:**
  - MemberID: Unique ID for each library member.
  - Name: Name of the library member.
  - BorrowingHistory: List to store transaction history.

- **Methods:**
  - BorrowBook(Book book): Initiates a book borrowing transaction.
  - ReturnBook(Transaction transaction): Initiates a book return transaction.

### Transaction Class

- **Attributes:**
  - Book: The book involved in the transaction.
  - Member: The library member involved in the transaction.
  - IssueDate: Date when the book is issued.
  - DueDate: Due date for returning the book.
  - IsReturned: Flag indicating if the book is returned.
  - Fine: Fine amount if the book is returned after the due date.

- **Methods:**
  - CalculateFine(): Calculates the fine based on the due date and return date.
  - CompleteTransaction(): Completes the book lending or returning process.

## Program Execution Flow

1. **Initialization:**
   - Create instances of books and library members.

2. **Transaction Initiation:**
   - A library member borrows a book.
   - Transaction details are recorded.

3. **Fine Calculation:**
   - If the book is returned after the due date, calculate the fine.

4. **Transaction Completion:**
   - Complete the transaction by updating book availability and member history.

## Example Usage

```csharp
// Initialization
Book book1 = new Book { Title = "Book1", Author = "Author1", IsAvailable = true };
LibraryMember member1 = new LibraryMember { MemberID = 1, Name = "Member1" };

// Transaction Initiation
member1.BorrowBook(book1);

// Fine Calculation
Transaction transaction = member1.BorrowingHistory[0];
transaction.CalculateFine();

// Transaction Completion
member1.ReturnBook(transaction);


